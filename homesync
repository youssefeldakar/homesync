#!/bin/sh


# Copyright (C) 2014 Youssef Eldakar <youssef.eldakar@bibalex.org>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or (at
# your option) any later version.

# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


# TODO: Convert the following comment blocks into a manpage.

# This is a wrapper around rsync for syncing a user's home directory on
# a workstation or laptop with the one on a remote server, such as on
# NFS or AFS.  Typically, the sync direction is remote-local, i.e.,
# 'downsyncing'.  However, local-remote, i.e., 'upsyncing', is also
# valid.

# As the only argument to the program, use either 'down' for setting the
# sync mode to downsync or 'up' for upsync.  If the mode is not
# explicitly set, the default is 'down'.

# For downsync, an exclusion list is defined to allow for "protecting"
# selected entries in the user's home directory from the syncing.  The
# downsync exclusion list is .HOMEsync.excludes.down in the user's home
# directory.

# Similarly, for upsync, an inclusion list is defined for selecting the
# specific entries in the user's home directory to be upsynced to the
# remote server.  The upsync inclusion list is .HOMEsync.includes.up in
# the user's home directory.  By default, during an upsync, everything
# else not in the inclusion list is excluded.  However, to turn this
# off, which is ALMOST CERTAINLY NEVER DESIRED, use 'up!' as the mode.

# The hostname and path to the user's home directory on the remote
# server are set in .HOMEsync.HOME in the user's home directory on the
# local end in the same notation rsync uses, and the path is not to end
# with a trailing slash, e.g., 'fileserver:/home/tom'.

# Error output from rsync is redirected to .HOMEsync.log in the user's
# home directory on the local end.


  # Use the specified mode.  If none specified, use the default.
  if [ $# -eq 1 ]; then

      if [ "$1" = "down" ]; then
        mode="down"
    elif [ "$1" = "up"   ]; then
        mode="up"

        # While upsyncing, be sure to exclude "everything else" even if
        # includes.up does not say so.
        precautious="--exclude='*'"
    elif [ "$1" = "up!"  ]; then
        mode="up"

        # The '!' means to turn precautious off.  At this point,
        # $precautious would not have been initialized, but still be
        # extra "precautious" and clear the string.
        precautious=
    else
        # Bad invocation.

        exit 1
      fi

elif [ $# -eq 0 ]; then
  # The default mode is downsync.
  mode="down"
else
    # And bad invocation here, too.

    exit 1
  fi

# Local (l) and remote (r), both not ending with slash.
l=$HOME
r=$(cat $HOME/.HOMEsync.HOME)

# Also, s and d, source and destination, respectively.
s=
d=

  if [ $mode = "down" ]; then
    # Use an exclusion list with mode = down.
    in_ex="exclude"

    s="$r"
    d="$l"
elif [ $mode = "up"   ]; then
    # Use an inclusion list with mode = up.
    in_ex="include"

    s="$l"
    d="$r"
else
    # Bad mode.  How come?

    exit 1
  fi

# It is worth noting here that using the precautious "exclude everything
# else" while the mode is downsync (exclude list) probably would not
# make much sense.  The way it is implemented, $precautious will always
# be unset if the mode is downsync.

# Finally, execute rsync.
rsync -a --delete --$in_ex-from=$HOME/.HOMEsync.${in_ex}s.$mode $precautious $s/ $d/ >$HOME/.HOMEsync.log 2>&1
